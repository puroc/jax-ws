package my.code.jax.ws.userService;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.11
 * 2014-05-17T14:56:53.168+08:00
 * Generated source version: 2.7.11
 * 
 */
@WebServiceClient(name = "UserServiceAgentService", 
                  wsdlLocation = "./WEB-INF/wsdl/UserService.xml",
                  targetNamespace = "www.cattsoft.com") 
public class UserServiceAgentService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("www.cattsoft.com", "UserServiceAgentService");
    public final static QName UserService = new QName("www.cattsoft.com", "UserService");
    static {
        URL url = UserServiceAgentService.class.getResource("./WEB-INF/wsdl/UserService.xml");
        if (url == null) {
            url = UserServiceAgentService.class.getClassLoader().getResource("./WEB-INF/wsdl/UserService.xml");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(UserServiceAgentService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "./WEB-INF/wsdl/UserService.xml");
        }       
        WSDL_LOCATION = url;
    }

    public UserServiceAgentService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public UserServiceAgentService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UserServiceAgentService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns UserServiceAgent
     */
    @WebEndpoint(name = "UserService")
    public UserServiceAgent getUserService() {
        return super.getPort(UserService, UserServiceAgent.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserServiceAgent
     */
    @WebEndpoint(name = "UserService")
    public UserServiceAgent getUserService(WebServiceFeature... features) {
        return super.getPort(UserService, UserServiceAgent.class, features);
    }

}
