package my.code.jax.ws.DepartmentService;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.11
 * 2014-05-14T11:20:15.439+08:00
 * Generated source version: 2.7.11
 * 
 */
@WebServiceClient(name = "DepartmentServiceAgentService", 
                  wsdlLocation = "DepartmentService.xml",
                  targetNamespace = "www.cattsoft.com") 
public class DepartmentServiceAgentService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("www.cattsoft.com", "DepartmentServiceAgentService");
    public final static QName DepartmentService = new QName("www.cattsoft.com", "DepartmentService");
    static {
        URL url = DepartmentServiceAgentService.class.getResource("DepartmentService.xml");
        if (url == null) {
            url = DepartmentServiceAgentService.class.getClassLoader().getResource("DepartmentService.xml");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(DepartmentServiceAgentService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "DepartmentService.xml");
        }       
        WSDL_LOCATION = url;
    }

    public DepartmentServiceAgentService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DepartmentServiceAgentService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DepartmentServiceAgentService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns DepartmentServiceAgent
     */
    @WebEndpoint(name = "DepartmentService")
    public DepartmentServiceAgent getDepartmentService() {
        return super.getPort(DepartmentService, DepartmentServiceAgent.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DepartmentServiceAgent
     */
    @WebEndpoint(name = "DepartmentService")
    public DepartmentServiceAgent getDepartmentService(WebServiceFeature... features) {
        return super.getPort(DepartmentService, DepartmentServiceAgent.class, features);
    }

}
